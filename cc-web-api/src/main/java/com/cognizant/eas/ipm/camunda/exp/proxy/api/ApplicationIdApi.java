/**
 * NOTE: This class is auto generated by the swagger code generator program (2.4.9).
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */
package com.cognizant.eas.ipm.camunda.exp.proxy.api;

import io.swagger.annotations.*;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.CrossOrigin;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestHeader;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RequestPart;
import org.springframework.web.multipart.MultipartFile;

import com.cognizant.eas.ipm.camunda.exp.proxy.model.ApplicationForm;
import com.cognizant.eas.ipm.camunda.exp.proxy.model.ApplicationFormResponse;

import javax.validation.Valid;
import javax.validation.constraints.*;
import java.util.List;
@javax.annotation.Generated(value = "com.cognizant.eas.ipm.camunda.exp.proxy.codegen.languages.SpringCodegen", date = "2019-11-16T06:57:02.932Z")

@Api(value = "{application-Id}", description = "the {application-Id} API")
public interface ApplicationIdApi {

	@CrossOrigin(origins = "*", methods = RequestMethod.POST, allowedHeaders = "*")
    @ApiOperation(value = "Submits the Credit Card Application", nickname = "submitCreditCardApplicationForApproval", notes = "", response = ApplicationFormResponse.class, tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "successful operation", response = ApplicationFormResponse.class) })
    @RequestMapping(value = "/{application-Id}/submission",
        produces = { "application/json" }, 
        consumes = { "application/json" },
        method = RequestMethod.POST)
    ResponseEntity<ApplicationForm> submitCreditCardApplicationForApproval(@ApiParam(value = "Unique id for the application",required=true) @PathVariable("application-Id") String applicationId,@ApiParam(value = "Application Form with the PromoCode and Customer Details Populated" ,required=true )  @Valid @RequestBody ApplicationForm applicationForm);


	@CrossOrigin(origins = "*", methods = RequestMethod.POST, allowedHeaders = "*")
    @ApiOperation(value = "Submits the Personal Details.", nickname = "submitPersonalDetails", notes = "", response = ApplicationFormResponse.class, tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "successful operation", response = ApplicationFormResponse.class) })
    @RequestMapping(value = "/{application-Id}/personal-information",
        produces = { "application/json" }, 
        consumes = { "application/json" },
        method = RequestMethod.POST)
    ResponseEntity<ApplicationFormResponse> submitPersonalDetails(@ApiParam(value = "Unique id for the application",required=true) @PathVariable("application-Id") String applicationId,@ApiParam(value = "Application Form with the PromoCode and Customer Details Populated" ,required=true )  @Valid @RequestBody ApplicationForm applicationForm);


	@CrossOrigin(origins = "*", methods = RequestMethod.POST, allowedHeaders = "*")
    @ApiOperation(value = "Submits the PromoCode and Customer Account Details.", nickname = "submitPromoCodeAndCustomerIdentity", notes = "", response = ApplicationFormResponse.class, tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "successful operation", response = ApplicationFormResponse.class) })
    @RequestMapping(value = "/{application-Id}/customer-identity",
        produces = { "application/json" }, 
        consumes = { "application/json" },
        method = RequestMethod.POST)
    ResponseEntity<ApplicationFormResponse> submitPromoCodeAndCustomerIdentity(@ApiParam(value = "Unique id for the application",required=true) @PathVariable("application-Id") String applicationId,@ApiParam(value = "Application Form with the PromoCode and Customer Details Populated" ,required=true )  @Valid @RequestBody ApplicationForm applicationForm);


	@CrossOrigin(origins = "*", methods = RequestMethod.POST, allowedHeaders = "*")
    @ApiOperation(value = "Submits the User Options.", nickname = "submitUserOptions", notes = "", response = ApplicationFormResponse.class, tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "successful operation", response = ApplicationFormResponse.class) })
    @RequestMapping(value = "/{application-Id}/user-options",
        produces = { "application/json" }, 
        consumes = { "application/json" },
        method = RequestMethod.POST)
    ResponseEntity<ApplicationFormResponse> submitUserOptions(@ApiParam(value = "Unique id for the application",required=true) @PathVariable("application-Id") String applicationId,@ApiParam(value = "Application Form with the PromoCode and Customer Details Populated" ,required=true )  @Valid @RequestBody ApplicationForm applicationForm);

}
